{"ast":null,"code":"export default {\n  props: {\n    storages: Array,\n    storage: String,\n    path: String,\n    endpoints: Object,\n    axios: Function\n  },\n\n  data() {\n    return {\n      newFolderPopper: false,\n      newFolderName: \"\"\n    };\n  },\n\n  computed: {\n    pathSegments() {\n      let path = \"/\",\n          isFolder = this.path[this.path.length - 1] === \"/\",\n          segments = this.path.split(\"/\").filter(item => item);\n      segments = segments.map((item, index) => {\n        path += item + (index < segments.length - 1 || isFolder ? \"/\" : \"\");\n        return {\n          name: item,\n          path\n        };\n      });\n      return segments;\n    },\n\n    storageObject() {\n      return this.storages.find(item => item.code == this.storage);\n    }\n\n  },\n  methods: {\n    changeStorage(code) {\n      if (this.storage != code) {\n        this.$emit(\"storage-changed\", code);\n        this.$emit(\"path-changed\", \"\");\n      }\n    },\n\n    changePath(path) {\n      this.$emit(\"path-changed\", path);\n    },\n\n    goUp() {\n      let segments = this.pathSegments,\n          path = segments.length === 1 ? \"/\" : segments[segments.length - 2].path;\n      this.changePath(path);\n    },\n\n    async addFiles(event) {\n      this.$emit(\"add-files\", event.target.files);\n      this.$refs.inputUpload.value = \"\";\n    },\n\n    async mkdir() {\n      this.$emit(\"loading\", true);\n      let url = this.endpoints.mkdir.url.replace(new RegExp(\"{storage}\", \"g\"), this.storage).replace(new RegExp(\"{path}\", \"g\"), this.path + this.newFolderName);\n      let config = {\n        url,\n        method: this.endpoints.mkdir.method || \"post\"\n      };\n      await this.axios.request(config);\n      this.$emit(\"folder-created\", this.newFolderName);\n      this.newFolderPopper = false;\n      this.newFolderName = \"\";\n      this.$emit(\"loading\", false);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["props","storages","Array","storage","String","path","endpoints","Object","axios","Function","data","newFolderPopper","newFolderName","computed","pathSegments","isFolder","length","segments","split","filter","item","map","index","name","storageObject","find","code","methods","changeStorage","$emit","changePath","goUp","addFiles","event","target","files","$refs","inputUpload","value","mkdir","url","replace","RegExp","config","method","request"],"sourceRoot":"","sources":["/Users/m67abyari/Projects/Front-Pract/Vue-prac/vuti-vue/src/App.vue"],"sourcesContent":["<template>\n  <v-menu offset-y v-if=\"storages.length > 1\">\n    <template v-slot:activator=\"{ on }\">\n      <v-btn icon class=\"storage-select-button mr-3\" v-on=\"on\">\n        <v-icon>mdi-arrow-down-drop-circle-outline</v-icon>\n      </v-btn>\n    </template>\n    <v-list class=\"storage-select-list\">\n      <v-list-item v-for=\"(item, index) in storages\" :key=\"index\" :disabled=\"item.code === storageObject.code\"\n        @click=\"changeStorage(item.code)\">\n        <v-list-item-icon>\n          <v-icon v-text=\"item.icon\"></v-icon>\n        </v-list-item-icon>\n        <v-list-item-title>{{ item.name }}</v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  props: {\n    storages: Array,\n    storage: String,\n    path: String,\n    endpoints: Object,\n    axios: Function\n  },\n  data() {\n    return {\n      newFolderPopper: false,\n      newFolderName: \"\"\n    };\n  },\n  computed: {\n    pathSegments() {\n      let path = \"/\",\n        isFolder = this.path[this.path.length - 1] === \"/\",\n        segments = this.path.split(\"/\").filter(item => item);\n      segments = segments.map((item, index) => {\n        path +=\n          item + (index < segments.length - 1 || isFolder ? \"/\" : \"\");\n        return {\n          name: item,\n          path\n        };\n      });\n      return segments;\n    },\n    storageObject() {\n      return this.storages.find(item => item.code == this.storage);\n    }\n  },\n  methods: {\n    changeStorage(code) {\n      if (this.storage != code) {\n        this.$emit(\"storage-changed\", code);\n        this.$emit(\"path-changed\", \"\");\n      }\n    },\n    changePath(path) {\n      this.$emit(\"path-changed\", path);\n    },\n    goUp() {\n      let segments = this.pathSegments,\n        path =\n          segments.length === 1\n            ? \"/\"\n            : segments[segments.length - 2].path;\n      this.changePath(path);\n    },\n    async addFiles(event) {\n      this.$emit(\"add-files\", event.target.files);\n      this.$refs.inputUpload.value = \"\";\n    },\n    async mkdir() {\n      this.$emit(\"loading\", true);\n      let url = this.endpoints.mkdir.url\n        .replace(new RegExp(\"{storage}\", \"g\"), this.storage)\n        .replace(new RegExp(\"{path}\", \"g\"), this.path + this.newFolderName);\n      let config = {\n        url,\n        method: this.endpoints.mkdir.method || \"post\"\n      };\n      await this.axios.request(config);\n      this.$emit(\"folder-created\", this.newFolderName);\n      this.newFolderPopper = false;\n      this.newFolderName = \"\";\n      this.$emit(\"loading\", false);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/* Storage Menu - alternate appearance\n.storage-select-button ::v-deep .v-btn__content {\n    flex-wrap: wrap;\n    font-size: 11px;\n    .v-icon {\n        width: 100%;\n        font-size: 22px;\n    }\n}\n*/\n.storage-select-list .v-list-item--disabled {\n  background-color: rgba(0, 0, 0, 0.25);\n  color: #fff;\n\n  .v-icon {\n    color: #fff;\n  }\n}\n</style>\nÂ© 2022 GitHub, Inc.\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact GitHub\nPricing\nAPI\nTraining\nBlog\nAbout\nLoading complete"]},"metadata":{},"sourceType":"module"}