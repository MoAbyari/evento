{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString($setup.storageObject.name), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAEM,KAFN,EAEM,IAFN,EAEMC,iBADDC,qBAAcC,IACb,CAFN,EACuB;EAAA;EADvB","names":["_createElementBlock","_toDisplayString","$setup","name"],"sourceRoot":"","sources":["/Users/m67abyari/Projects/Front-Pract/Vue-prac/vuti-vue/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    {{ storageObject.name }}\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst availableStorages = ref([\n  {\n    name: \"Local\",\n    code: \"local\",\n    icon: \"fas fa-hard-drive\",\n  },\n  {\n    name: \"Amazon S3\",\n    code: \"S3\",\n    icon: \"fas fa-cloud\",\n  }\n])\n// eslint-disable-next-line\nconst storage = ref('local')\nconst activeStorage = ref('local')\n\nconst storageObject = computed(() => {\n  if (activeStorage.value) {\n    return availableStorages.value.find(\n      (item) => item.code === activeStorage.value\n    )\n  } else {\n    return ''\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}