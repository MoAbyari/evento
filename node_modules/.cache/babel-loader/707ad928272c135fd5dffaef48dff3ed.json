{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBtn.css\"; // Components\n\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent } from \"../../util/index.mjs\"; // Types\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    block: Boolean,\n    stacked: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'button'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'contained'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isDisabled = computed(() => (group == null ? void 0 : group.disabled.value) || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'contained' && !(props.disabled || props.flat || props.border);\n    });\n    useSelectLink(link, group == null ? void 0 : group.select);\n    return () => {\n      var _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !group || group.isSelected.value;\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group == null ? void 0 : group.selectedClass.value, {\n          'v-btn--active': props.active,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, locationStyles.value],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": e => {\n          var _link$navigate;\n\n          if (isDisabled.value) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          group == null ? void 0 : group.toggle();\n        }\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && props.prependIcon && _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), _createVNode(\"div\", {\n          \"class\": \"v-btn__content\",\n          \"data-no-activator\": \"\"\n        }, [typeof props.icon === 'boolean' ? (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots) : _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.icon,\n          \"size\": props.size\n        }, null)]), !props.icon && props.appendIcon && _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.appendIcon,\n          \"end\": true\n        }, null)]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtnToggleSymbol","VIcon","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","useSelectLink","IconValue","Ripple","computed","defineComponent","VBtn","name","directives","props","active","Boolean","symbol","type","default","flat","icon","String","Function","Object","prependIcon","appendIcon","block","stacked","ripple","tag","variant","setup","attrs","slots","_ref","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","sizeClasses","group","link","isDisabled","disabled","value","isElevated","border","select","Tag","isLink","hasColor","isSelected","undefined","selectedClass","href","e","navigate","toggle","_slots$default","size"],"sources":["../../../src/components/VBtn/VBtn.tsx"],"sourcesContent":["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { useSelectLink } from '@/composables/selectLink'\nimport { IconValue } from '@/composables/icons'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'contained' && !(props.disabled || props.flat || props.border)\n    })\n\n    useSelectLink(link, group?.select)\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !group || group.isSelected.value\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': props.active,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && props.prependIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.prependIcon }\n              start\n            />\n          ) }\n\n          <div class=\"v-btn__content\" data-no-activator=\"\">\n            { typeof props.icon === 'boolean'\n              ? slots.default?.()\n              : (\n                <VIcon\n                  class=\"v-btn__icon\"\n                  icon={ props.icon }\n                  size={ props.size }\n                />\n              )\n            }\n          </div>\n\n          { !props.icon && props.appendIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.appendIcon }\n              end\n            />\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n"]},"metadata":{},"sourceType":"module"}